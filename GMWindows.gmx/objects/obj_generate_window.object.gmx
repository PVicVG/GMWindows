<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_button</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>4</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Flags.
global.win_in_focus = -1;
image_speed = 0;
custom_string = "Sample Text";
custom_string_color = c_white;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Main Handle.
// Check if mouse is inside.
if (mouse_x &gt; bbox_left &amp;&amp; mouse_x &lt; bbox_right &amp;&amp; mouse_y &gt; bbox_top &amp;&amp; mouse_y &lt; bbox_bottom)
{
    // Frame.
        // Change Mask to Dot Temporarely for better collision checking with the mouse.
            var tempMask;
            tempMask = mask_index;
            mask_index = spr_dot;
        
        // Check
            if !instance_place(mouse_x, mouse_y, obj_window)
            {
                image_index = 1;
            }
            else
            {
                image_index = 0;
            }
        
        // Revert.
            mask_index = tempMask;
        
    // Left Click - Option Window
        if (mouse_check_button_pressed(mb_left) &amp;&amp; image_index == 1)
        {
            /// Generate Options Window
                // Create Instance
                    var w_;
                    w_ = instance_create(x, y, obj_window_options)
                
                // Name
                    w_.window_name = "Options";
                    
                // Icon
                    w_.window_icon = 1;
                
                // Size
                    w_.window_width = 168;
                    w_.window_height = 128;
                
                // Minimum Size
                    w_.min_window_width = 168;
                    w_.min_window_height = 64;
                
                // Options
                    w_.option[1] = "Center Window";
                    w_.option_action[1] = 1;
                    
                    w_.option[2] = "Restart";
                    w_.option_action[2] = 2;
                    
                    w_.option[3] = "Change Color of Sample Text";
                    w_.option_action[3] = 3;
                    
                    w_.option_max = 3;
                    
                // Target
                    w_.target_object = id;
                
                // Set focus
                    global.win_in_focus = w_.id;
        }
        
    // Right Click - Normal Window
        if (mouse_check_button_pressed(mb_right) &amp;&amp; image_index == 1)
        {
            /// Generate Options Window
                // Create Instance
                    var w_;
                    w_ = instance_create(x, y, obj_window_message)
                
                // Name
                    w_.window_name = "Hello World";
                    
                // Icon
                    w_.window_icon = 0;
                
                // Size
                    w_.min_window_width = 288;
                    w_.min_window_height = 128;
                    
                    w_.window_width = w_.min_window_width;
                    w_.window_height = w_.min_window_height;
                    
                // Text
                    w_.window_text = "Sup gamers.# I've come to make an announcement.#Jazz is the worst musical genre.#Future Funk is 1000x better.#Press [OK] if you agree."
                    
                // Target
                    w_.target_object = id;

                // Set focus
                    global.win_in_focus = w_.id;
        }
        
  // Middle Click - Insert String
        if (mouse_check_button_pressed(mb_middle) &amp;&amp; image_index == 1)
        {
            /// Generate Options Window
                // Create Instance
                    var w_;
                    w_ = instance_create(x, y, obj_window_string_insert)
                
                // Name
                    w_.window_name = "Insert a string";
                    
                // Icon
                    w_.window_icon = 0;
                
                // Size
                    w_.min_window_width = 288;
                    w_.min_window_height = 128;
                    
                    w_.window_width = w_.min_window_width;
                    w_.window_height = w_.min_window_height;
                    
                // Text
                    w_.window_text = "Please insert some epic text#in the textbox below."
                    
                // Target
                    w_.target_object = id;

                // Set focus
                    global.win_in_focus = w_.id;
        }
}
else
{
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw
draw_self()

// Draw Tooltip
if image_index == 1
{
    draw_tooltip("Left Click - Option Window#Right Click - Normal Window#Middle Click - Insert String",floor(mouse_x),floor(mouse_y),fnt_interface)
}

// Custom String.
draw_set_color(custom_string_color)
draw_text(0,0,custom_string)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
